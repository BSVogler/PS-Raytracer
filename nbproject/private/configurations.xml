<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="cmake_out">
        <df name="build">
          <df name="Release">
          </df>
        </df>
        <df name="CMakeFiles">
          <df name="3.9.1">
            <df name="CompilerIdC">
              <df name="tmp">
              </df>
              <in>CMakeCCompilerId.c</in>
            </df>
            <df name="CompilerIdCXX">
              <df name="tmp">
              </df>
              <in>CMakeCXXCompilerId.cpp</in>
            </df>
          </df>
          <df name="CMakeTmp">
          </df>
          <in>feature_tests.c</in>
          <in>feature_tests.cxx</in>
        </df>
        <df name="external">
          <df name="glfw-3.0.3">
            <df name="CMakeFiles">
            </df>
            <df name="docs">
            </df>
            <df name="src">
              <df name="CMakeFiles">
                <df name="glfw.dir">
                </df>
              </df>
              <in>config.h</in>
            </df>
          </df>
        </df>
        <df name="framework">
          <df name="CMakeFiles">
            <df name="framework.dir">
            </df>
          </df>
        </df>
        <df name="source">
          <df name="CMakeFiles">
            <df name="raytracer.dir">
            </df>
          </df>
        </df>
      </df>
      <df name="external">
        <df name="GL">
          <in>glew.h</in>
          <in>glext.h</in>
          <in>glxew.h</in>
          <in>glxext.h</in>
          <in>wglew.h</in>
          <in>wglext.h</in>
        </df>
        <df name="glfw-3.0.3">
          <df name="CMake">
            <df name="modules">
            </df>
          </df>
          <df name="deps">
            <df name="EGL">
              <in>eglext.h</in>
            </df>
            <df name="GL">
              <in>glext.h</in>
              <in>glxext.h</in>
              <in>wglext.h</in>
            </df>
            <in>getopt.c</in>
            <in>getopt.h</in>
            <in>tinycthread.c</in>
            <in>tinycthread.h</in>
          </df>
          <df name="docs">
          </df>
          <df name="examples">
            <in>boing.c</in>
            <in>gears.c</in>
            <in>heightmap.c</in>
            <in>simple.c</in>
            <in>splitview.c</in>
            <in>wave.c</in>
          </df>
          <df name="include">
            <df name="GLFW">
              <in>glfw3.h</in>
              <in>glfw3native.h</in>
            </df>
          </df>
          <df name="src">
            <in>clipboard.c</in>
            <in>cocoa_clipboard.m</in>
            <in>cocoa_gamma.c</in>
            <in>cocoa_init.m</in>
            <in>cocoa_joystick.m</in>
            <in>cocoa_monitor.m</in>
            <in>cocoa_platform.h</in>
            <in>cocoa_time.c</in>
            <in>cocoa_window.m</in>
            <in>context.c</in>
            <in>egl_context.c</in>
            <in>egl_platform.h</in>
            <in>gamma.c</in>
            <in>glx_context.c</in>
            <in>glx_platform.h</in>
            <in>init.c</in>
            <in>input.c</in>
            <in>internal.h</in>
            <in>joystick.c</in>
            <in>monitor.c</in>
            <in>nsgl_context.m</in>
            <in>nsgl_platform.h</in>
            <in>time.c</in>
            <in>wgl_context.c</in>
            <in>wgl_platform.h</in>
            <in>win32_clipboard.c</in>
            <in>win32_gamma.c</in>
            <in>win32_init.c</in>
            <in>win32_joystick.c</in>
            <in>win32_monitor.c</in>
            <in>win32_platform.h</in>
            <in>win32_time.c</in>
            <in>win32_window.c</in>
            <in>window.c</in>
            <in>x11_clipboard.c</in>
            <in>x11_gamma.c</in>
            <in>x11_init.c</in>
            <in>x11_joystick.c</in>
            <in>x11_monitor.c</in>
            <in>x11_platform.h</in>
            <in>x11_time.c</in>
            <in>x11_unicode.c</in>
            <in>x11_window.c</in>
          </df>
          <df name="tests">
            <in>accuracy.c</in>
            <in>clipboard.c</in>
            <in>defaults.c</in>
            <in>events.c</in>
            <in>fsaa.c</in>
            <in>gamma.c</in>
            <in>glfwinfo.c</in>
            <in>iconify.c</in>
            <in>joysticks.c</in>
            <in>modes.c</in>
            <in>peter.c</in>
            <in>reopen.c</in>
            <in>sharing.c</in>
            <in>tearing.c</in>
            <in>threads.c</in>
            <in>title.c</in>
            <in>windows.c</in>
          </df>
        </df>
        <df name="glm-0.9.5.3">
          <df name="glm">
            <df name="detail">
              <in>_features.hpp</in>
              <in>_fixes.hpp</in>
              <in>_literals.hpp</in>
              <in>_noise.hpp</in>
              <in>_swizzle.hpp</in>
              <in>_swizzle_func.hpp</in>
              <in>_vectorize.hpp</in>
              <in>dummy.cpp</in>
              <in>func_common.hpp</in>
              <in>func_common.inl</in>
              <in>func_exponential.hpp</in>
              <in>func_exponential.inl</in>
              <in>func_geometric.hpp</in>
              <in>func_geometric.inl</in>
              <in>func_integer.hpp</in>
              <in>func_integer.inl</in>
              <in>func_matrix.hpp</in>
              <in>func_matrix.inl</in>
              <in>func_noise.hpp</in>
              <in>func_noise.inl</in>
              <in>func_packing.hpp</in>
              <in>func_packing.inl</in>
              <in>func_trigonometric.hpp</in>
              <in>func_trigonometric.inl</in>
              <in>func_vector_relational.hpp</in>
              <in>func_vector_relational.inl</in>
              <in>glm.cpp</in>
              <in>hint.hpp</in>
              <in>intrinsic_common.hpp</in>
              <in>intrinsic_common.inl</in>
              <in>intrinsic_exponential.hpp</in>
              <in>intrinsic_exponential.inl</in>
              <in>intrinsic_geometric.hpp</in>
              <in>intrinsic_geometric.inl</in>
              <in>intrinsic_integer.hpp</in>
              <in>intrinsic_integer.inl</in>
              <in>intrinsic_matrix.hpp</in>
              <in>intrinsic_matrix.inl</in>
              <in>intrinsic_trigonometric.hpp</in>
              <in>intrinsic_trigonometric.inl</in>
              <in>intrinsic_vector_relational.hpp</in>
              <in>intrinsic_vector_relational.inl</in>
              <in>precision.hpp</in>
              <in>precision.inl</in>
              <in>setup.hpp</in>
              <in>type_float.hpp</in>
              <in>type_gentype.hpp</in>
              <in>type_gentype.inl</in>
              <in>type_half.hpp</in>
              <in>type_half.inl</in>
              <in>type_int.hpp</in>
              <in>type_mat.hpp</in>
              <in>type_mat.inl</in>
              <in>type_mat2x2.hpp</in>
              <in>type_mat2x2.inl</in>
              <in>type_mat2x3.hpp</in>
              <in>type_mat2x3.inl</in>
              <in>type_mat2x4.hpp</in>
              <in>type_mat2x4.inl</in>
              <in>type_mat3x2.hpp</in>
              <in>type_mat3x2.inl</in>
              <in>type_mat3x3.hpp</in>
              <in>type_mat3x3.inl</in>
              <in>type_mat3x4.hpp</in>
              <in>type_mat3x4.inl</in>
              <in>type_mat4x2.hpp</in>
              <in>type_mat4x2.inl</in>
              <in>type_mat4x3.hpp</in>
              <in>type_mat4x3.inl</in>
              <in>type_mat4x4.hpp</in>
              <in>type_mat4x4.inl</in>
              <in>type_vec.hpp</in>
              <in>type_vec.inl</in>
              <in>type_vec1.hpp</in>
              <in>type_vec1.inl</in>
              <in>type_vec2.hpp</in>
              <in>type_vec2.inl</in>
              <in>type_vec3.hpp</in>
              <in>type_vec3.inl</in>
              <in>type_vec4.hpp</in>
              <in>type_vec4.inl</in>
            </df>
            <df name="gtc">
              <in>constants.hpp</in>
              <in>constants.inl</in>
              <in>epsilon.hpp</in>
              <in>epsilon.inl</in>
              <in>matrix_access.hpp</in>
              <in>matrix_access.inl</in>
              <in>matrix_integer.hpp</in>
              <in>matrix_inverse.hpp</in>
              <in>matrix_inverse.inl</in>
              <in>matrix_transform.hpp</in>
              <in>matrix_transform.inl</in>
              <in>noise.hpp</in>
              <in>noise.inl</in>
              <in>packing.hpp</in>
              <in>packing.inl</in>
              <in>quaternion.hpp</in>
              <in>quaternion.inl</in>
              <in>random.hpp</in>
              <in>random.inl</in>
              <in>reciprocal.hpp</in>
              <in>reciprocal.inl</in>
              <in>type_precision.hpp</in>
              <in>type_precision.inl</in>
              <in>type_ptr.hpp</in>
              <in>type_ptr.inl</in>
              <in>ulp.hpp</in>
              <in>ulp.inl</in>
            </df>
            <df name="gtx">
              <in>associated_min_max.hpp</in>
              <in>associated_min_max.inl</in>
              <in>bit.hpp</in>
              <in>bit.inl</in>
              <in>closest_point.hpp</in>
              <in>closest_point.inl</in>
              <in>color_space.hpp</in>
              <in>color_space.inl</in>
              <in>color_space_YCoCg.hpp</in>
              <in>color_space_YCoCg.inl</in>
              <in>compatibility.hpp</in>
              <in>compatibility.inl</in>
              <in>component_wise.hpp</in>
              <in>component_wise.inl</in>
              <in>constants.hpp</in>
              <in>dual_quaternion.hpp</in>
              <in>dual_quaternion.inl</in>
              <in>epsilon.hpp</in>
              <in>euler_angles.hpp</in>
              <in>euler_angles.inl</in>
              <in>extend.hpp</in>
              <in>extend.inl</in>
              <in>extented_min_max.hpp</in>
              <in>extented_min_max.inl</in>
              <in>fast_exponential.hpp</in>
              <in>fast_exponential.inl</in>
              <in>fast_square_root.hpp</in>
              <in>fast_square_root.inl</in>
              <in>fast_trigonometry.hpp</in>
              <in>fast_trigonometry.inl</in>
              <in>gradient_paint.hpp</in>
              <in>gradient_paint.inl</in>
              <in>handed_coordinate_space.hpp</in>
              <in>handed_coordinate_space.inl</in>
              <in>inertia.hpp</in>
              <in>inertia.inl</in>
              <in>int_10_10_10_2.hpp</in>
              <in>int_10_10_10_2.inl</in>
              <in>integer.hpp</in>
              <in>integer.inl</in>
              <in>intersect.hpp</in>
              <in>intersect.inl</in>
              <in>io.hpp</in>
              <in>io.inl</in>
              <in>log_base.hpp</in>
              <in>log_base.inl</in>
              <in>matrix_cross_product.hpp</in>
              <in>matrix_cross_product.inl</in>
              <in>matrix_interpolation.hpp</in>
              <in>matrix_interpolation.inl</in>
              <in>matrix_major_storage.hpp</in>
              <in>matrix_major_storage.inl</in>
              <in>matrix_operation.hpp</in>
              <in>matrix_operation.inl</in>
              <in>matrix_query.hpp</in>
              <in>matrix_query.inl</in>
              <in>mixed_product.hpp</in>
              <in>mixed_product.inl</in>
              <in>multiple.hpp</in>
              <in>multiple.inl</in>
              <in>noise.hpp</in>
              <in>norm.hpp</in>
              <in>norm.inl</in>
              <in>normal.hpp</in>
              <in>normal.inl</in>
              <in>normalize_dot.hpp</in>
              <in>normalize_dot.inl</in>
              <in>number_precision.hpp</in>
              <in>number_precision.inl</in>
              <in>optimum_pow.hpp</in>
              <in>optimum_pow.inl</in>
              <in>orthonormalize.hpp</in>
              <in>orthonormalize.inl</in>
              <in>perpendicular.hpp</in>
              <in>perpendicular.inl</in>
              <in>polar_coordinates.hpp</in>
              <in>polar_coordinates.inl</in>
              <in>projection.hpp</in>
              <in>projection.inl</in>
              <in>quaternion.hpp</in>
              <in>quaternion.inl</in>
              <in>random.hpp</in>
              <in>raw_data.hpp</in>
              <in>raw_data.inl</in>
              <in>reciprocal.hpp</in>
              <in>rotate_normalized_axis.hpp</in>
              <in>rotate_normalized_axis.inl</in>
              <in>rotate_vector.hpp</in>
              <in>rotate_vector.inl</in>
              <in>scalar_relational.hpp</in>
              <in>scalar_relational.inl</in>
              <in>simd_mat4.hpp</in>
              <in>simd_mat4.inl</in>
              <in>simd_quat.hpp</in>
              <in>simd_quat.inl</in>
              <in>simd_vec4.hpp</in>
              <in>simd_vec4.inl</in>
              <in>spline.hpp</in>
              <in>spline.inl</in>
              <in>std_based_type.hpp</in>
              <in>std_based_type.inl</in>
              <in>string_cast.hpp</in>
              <in>string_cast.inl</in>
              <in>transform.hpp</in>
              <in>transform.inl</in>
              <in>transform2.hpp</in>
              <in>transform2.inl</in>
              <in>ulp.hpp</in>
              <in>unsigned_int.hpp</in>
              <in>unsigned_int.inl</in>
              <in>vec1.hpp</in>
              <in>vec1.inl</in>
              <in>vector_angle.hpp</in>
              <in>vector_angle.inl</in>
              <in>vector_query.hpp</in>
              <in>vector_query.inl</in>
              <in>wrap.hpp</in>
              <in>wrap.inl</in>
            </df>
            <df name="virtrev">
              <in>xstream.hpp</in>
            </df>
            <in>common.hpp</in>
            <in>exponential.hpp</in>
            <in>ext.hpp</in>
            <in>fwd.hpp</in>
            <in>geometric.hpp</in>
            <in>glm.hpp</in>
            <in>integer.hpp</in>
            <in>mat2x2.hpp</in>
            <in>mat2x3.hpp</in>
            <in>mat2x4.hpp</in>
            <in>mat3x2.hpp</in>
            <in>mat3x3.hpp</in>
            <in>mat3x4.hpp</in>
            <in>mat4x2.hpp</in>
            <in>mat4x3.hpp</in>
            <in>mat4x4.hpp</in>
            <in>matrix.hpp</in>
            <in>packing.hpp</in>
            <in>trigonometric.hpp</in>
            <in>vec2.hpp</in>
            <in>vec3.hpp</in>
            <in>vec4.hpp</in>
            <in>vector_relational.hpp</in>
          </df>
          <df name="test">
            <df name="bug">
            </df>
            <df name="core">
              <in>core_func_common.cpp</in>
              <in>core_func_exponential.cpp</in>
              <in>core_func_geometric.cpp</in>
              <in>core_func_integer.cpp</in>
              <in>core_func_matrix.cpp</in>
              <in>core_func_noise.cpp</in>
              <in>core_func_packing.cpp</in>
              <in>core_func_swizzle.cpp</in>
              <in>core_func_trigonometric.cpp</in>
              <in>core_func_vector_relational.cpp</in>
              <in>core_setup_message.cpp</in>
              <in>core_setup_precision.cpp</in>
              <in>core_type_cast.cpp</in>
              <in>core_type_float.cpp</in>
              <in>core_type_int.cpp</in>
              <in>core_type_length.cpp</in>
              <in>core_type_mat2x2.cpp</in>
              <in>core_type_mat2x3.cpp</in>
              <in>core_type_mat2x4.cpp</in>
              <in>core_type_mat3x2.cpp</in>
              <in>core_type_mat3x3.cpp</in>
              <in>core_type_mat3x4.cpp</in>
              <in>core_type_mat4x2.cpp</in>
              <in>core_type_mat4x3.cpp</in>
              <in>core_type_mat4x4.cpp</in>
              <in>core_type_vec1.cpp</in>
              <in>core_type_vec2.cpp</in>
              <in>core_type_vec3.cpp</in>
              <in>core_type_vec4.cpp</in>
            </df>
            <df name="external">
              <df name="gli">
                <df name="core">
                  <in>dummy.cpp</in>
                  <in>generate_mipmaps.hpp</in>
                  <in>generate_mipmaps.inl</in>
                  <in>image2d.hpp</in>
                  <in>image2d.inl</in>
                  <in>operation.hpp</in>
                  <in>operation.inl</in>
                  <in>operator.hpp</in>
                  <in>operator.inl</in>
                  <in>shared_array.hpp</in>
                  <in>shared_array.inl</in>
                  <in>shared_ptr.hpp</in>
                  <in>shared_ptr.inl</in>
                  <in>size.hpp</in>
                  <in>size.inl</in>
                  <in>texture2d.hpp</in>
                  <in>texture2d.inl</in>
                  <in>texture2d_array.hpp</in>
                  <in>texture2d_array.inl</in>
                  <in>texture_cube.hpp</in>
                  <in>texture_cube.inl</in>
                  <in>texture_cube_array.hpp</in>
                  <in>texture_cube_array.inl</in>
                </df>
                <df name="gtx">
                  <in>compression.hpp</in>
                  <in>compression.inl</in>
                  <in>fetch.hpp</in>
                  <in>fetch.inl</in>
                  <in>gl_texture2d.hpp</in>
                  <in>gl_texture2d.inl</in>
                  <in>gradient.hpp</in>
                  <in>gradient.inl</in>
                  <in>loader.hpp</in>
                  <in>loader.inl</in>
                  <in>loader_dds10.hpp</in>
                  <in>loader_dds10.inl</in>
                  <in>loader_dds9.hpp</in>
                  <in>loader_dds9.inl</in>
                  <in>loader_tga.hpp</in>
                  <in>loader_tga.inl</in>
                  <in>wavelet.hpp</in>
                  <in>wavelet.inl</in>
                </df>
                <in>gli.hpp</in>
              </df>
            </df>
            <df name="gtc">
              <in>gtc_constants.cpp</in>
              <in>gtc_epsilon.cpp</in>
              <in>gtc_matrix_access.cpp</in>
              <in>gtc_matrix_integer.cpp</in>
              <in>gtc_matrix_inverse.cpp</in>
              <in>gtc_matrix_transform.cpp</in>
              <in>gtc_noise.cpp</in>
              <in>gtc_packing.cpp</in>
              <in>gtc_quaternion.cpp</in>
              <in>gtc_random.cpp</in>
              <in>gtc_reciprocal.cpp</in>
              <in>gtc_type_precision.cpp</in>
              <in>gtc_type_ptr.cpp</in>
              <in>gtc_ulp.cpp</in>
            </df>
            <df name="gtx">
              <in>gtx_associated_min_max.cpp</in>
              <in>gtx_bit.cpp</in>
              <in>gtx_closest_point.cpp</in>
              <in>gtx_color_space.cpp</in>
              <in>gtx_color_space_YCoCg.cpp</in>
              <in>gtx_compatibility.cpp</in>
              <in>gtx_component_wise.cpp</in>
              <in>gtx_dual_quaternion.cpp</in>
              <in>gtx_euler_angle.cpp</in>
              <in>gtx_extend.cpp</in>
              <in>gtx_extented_min_max.cpp</in>
              <in>gtx_fast_exponential.cpp</in>
              <in>gtx_fast_square_root.cpp</in>
              <in>gtx_fast_trigonometry.cpp</in>
              <in>gtx_gradient_paint.cpp</in>
              <in>gtx_handed_coordinate_space.cpp</in>
              <in>gtx_inertia.cpp</in>
              <in>gtx_int_10_10_10_2.cpp</in>
              <in>gtx_integer.cpp</in>
              <in>gtx_intersect.cpp</in>
              <in>gtx_io.cpp</in>
              <in>gtx_log_base.cpp</in>
              <in>gtx_matrix_cross_product.cpp</in>
              <in>gtx_matrix_interpolation.cpp</in>
              <in>gtx_matrix_major_storage.cpp</in>
              <in>gtx_matrix_operation.cpp</in>
              <in>gtx_matrix_query.cpp</in>
              <in>gtx_mixed_product.cpp</in>
              <in>gtx_multiple.cpp</in>
              <in>gtx_norm.cpp</in>
              <in>gtx_normal.cpp</in>
              <in>gtx_normalize_dot.cpp</in>
              <in>gtx_number_precision.cpp</in>
              <in>gtx_optimum_pow.cpp</in>
              <in>gtx_orthonormalize.cpp</in>
              <in>gtx_perpendicular.cpp</in>
              <in>gtx_polar_coordinates.cpp</in>
              <in>gtx_projection.cpp</in>
              <in>gtx_quaternion.cpp</in>
              <in>gtx_random.cpp</in>
              <in>gtx_rotate_normalized_axis.cpp</in>
              <in>gtx_rotate_vector.cpp</in>
              <in>gtx_scalar_relational.cpp</in>
              <in>gtx_simd_mat4.cpp</in>
              <in>gtx_simd_vec4.cpp</in>
              <in>gtx_spline.cpp</in>
              <in>gtx_string_cast.cpp</in>
              <in>gtx_vector_angle.cpp</in>
              <in>gtx_vector_query.cpp</in>
            </df>
          </df>
          <df name="util">
          </df>
        </df>
      </df>
      <df name="framework">
        <in>Box.cpp</in>
        <in>Box.hpp</in>
        <in>Camera.cpp</in>
        <in>Camera.hpp</in>
        <in>Composite.cpp</in>
        <in>Composite.hpp</in>
        <in>Intersection.hpp</in>
        <in>LightPoint.cpp</in>
        <in>LightPoint.hpp</in>
        <in>Material.cpp</in>
        <in>Material.hpp</in>
        <in>RenderObject.cpp</in>
        <in>RenderObject.hpp</in>
        <in>SDFLoader.cpp</in>
        <in>SDFLoader.hpp</in>
        <in>Scene.hpp</in>
        <in>Sphere.cpp</in>
        <in>Sphere.hpp</in>
        <in>color.hpp</in>
        <in>fensterchen.hpp</in>
        <in>glew.c</in>
        <in>pixel.cpp</in>
        <in>pixel.hpp</in>
        <in>ppmwriter.cpp</in>
        <in>ppmwriter.hpp</in>
        <in>ray.hpp</in>
        <in>renderer.cpp</in>
        <in>renderer.hpp</in>
        <in>window.cpp</in>
        <in>window.hpp</in>
      </df>
      <df name="output">
        <df name="tmp">
        </df>
      </df>
      <df name="sdfGenerator">
        <df name="sdfGeneratorOutput">
        </df>
        <in>sdfGenerator.cpp</in>
        <in>stdafx.cpp</in>
        <in>stdafx.h</in>
        <in>targetver.h</in>
      </df>
      <df name="source">
        <in>raytracer.cpp</in>
      </df>
      <df name="tests">
        <in>main.cpp</in>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>4</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <dbxdebugger version="1">
        <pathmaps>
        </pathmaps>
        <interceptlist>
          <interceptoptions all="false" unhandled="true" unexpected="true"/>
        </interceptlist>
        <signals>
        </signals>
        <options>
          <DebugOptions>
          </DebugOptions>
        </options>
        <buildfirst buildfirst_overriden="false" buildfirst_old="false"/>
      </dbxdebugger>
      <dbxrtc version="1">
        <options>
          <RtcOptions>
            <option name="rtc_error_log_file_name" value="/dev/null"/>
          </RtcOptions>
        </options>
        <loadobjs>
        </loadobjs>
      </dbxrtc>
      <nativedebugger version="1">
        <engine>dbx</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
